/*
A beautiful matrix is a matrix in which the sum of elements in each row and column is equal. Given a square matrix of size NxN.
Find the minimum number of operation(s) that are required to make the matrix beautiful. In one operation you can increment the value
of any one cell by 1.
Example 1:
Input:
N = 2
matrix[][] = {{1, 2},
              {3, 4}}
Output: 
4
Explanation:
Updated matrix:
4 3
3 4
1. Increment value of cell(0, 0) by 3
2. Increment value of cell(0, 1) by 1
Hence total 4 operation are required.
*/

class Solution {
    public static int findMinOperation(int N, int[][] matrix) {
        int max=Integer.MIN_VALUE,ans=0;
        for(int i=0;i<N;i++){
            int rowsm=0,colsm=0;
            for(int j=0;j<N;j++)
            {
                rowsm+=matrix[i][j];
                colsm+=matrix[j][i];
            }
            max=Math.max(max,Math.max(rowsm,colsm));
        }

        for(int i=0;i<N;i++)
        {
            int sum=0;
            for(int j=0;j<N;j++)
            {
                sum+=matrix[i][j];
            }
            ans+=max-sum;
        }
        return ans;
    }
}
   
