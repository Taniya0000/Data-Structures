/*
Given an integer array coins[ ] of size N representing different denominations of currency and an integer sum,
find the number of ways you can make sum by using different combinations from coins[ ].  
Note: Assume that you have an infinite supply of each type of coin. And you can use any coin as many times as you want.
Input:
N = 3, sum = 4
coins = {1,2,3}
Output: 4
Explanation: Four Possible ways are: {1,1,1,1},{1,1,2},{2,2},{1,3}.
*/

class Solution {
     public long count(int coins[], int N, int sum) {
         long[] dp = new long[sum + 1];
        dp[0] = 1;
        for(int i = 0; i < coins.length; ++i){
            if(coins[i] > sum) continue;
            for(int j = coins[i]; j <= sum; ++j){
                if(dp[j - coins[i]] > 0) dp[j] += dp[j -coins[i]];
            }
        }        
        return dp[sum];
    }
}
