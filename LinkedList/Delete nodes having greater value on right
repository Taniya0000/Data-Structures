/*
Given a singly linked list, remove all the nodes in the list which have any node on their right whose value is greater.
(Not just immidiate Right , but entire List on the Right)
Example 1:

Input:
LinkedList = 12->15->10->11->5->6->2->3
Output: 15 11 6 3
Explanation: Since, 12, 10, 5 and 2 are
the elements which have greater elements
on the following nodes. So, after deleting
them, the linked list would like be 15,
11, 6, 3.
*/

class Solution
{
    Node compute(Node head)
    {
        head = reverseLinkedList(head);
        Node current = head;
        
        while(current != null && current.next != null){
            if(current.data > current.next.data){
                current.next = current.next.next;
            } else {
                current = current.next;
            }
        }
        return reverseLinkedList(head);
    }
    
    Node reverseLinkedList(Node head){
        Node previous = null, next = null;
        while(head != null){
            next = head.next;
            head.next = previous;
            previous = head;
            head = next;
        }
        return previous;
    }
}
  
